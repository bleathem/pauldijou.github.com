<?xml version='1.0' encoding='utf-8' ?>
<feed xml:lang='en-US' xmlns='http://www.w3.org/2005/Atom'>
  <id>http://pauldijou.github.com/</id>
  <title>Paul Dijou</title>
  <updated>2012-05-08T00:00:00Z</updated>
  <link href='http://pauldijou.github.com/blog.atom' rel='self' type='application/atom+xml' />
  <link href='http://pauldijou.github.com/' rel='alternate' type='text/html' />
  <entry>
    <id>http://pauldijou.github.com/blog/2012/05/08/jsf-bootstrap-render-all.html</id>
    <title>JSF, Bootstrap and calling render=@all</title>
    <updated>2012-05-08T00:00:00Z</updated>
    <link href='http://pauldijou.github.com/blog/2012/05/08/jsf-bootstrap-render-all.html' rel='alternate' type='text/html' />
    <summary>
      The problem
      So, the other day, I was playing with Twitter Bootstrap on a JSF application. Everything was fine until I decide to use a render="@all" somewhere in the page in order to refresh all my components after quite an heavy operation. Working fine.
      But Bootstrap was no longuer fully healthy. The CSS and design were ok, but the Javascript was all broken : nearly all effects didn&#8217;t appear anymore. It was a bit strange so I hit F5 and everything was fine, all Javascript events were back. But the moment my render="@all" was called, they dissapear again.
      Why?
      After some investigations, the reason......
    </summary>
    <content type='html'>
      &lt;h3&gt;The problem&lt;/h3&gt;
      &lt;p&gt;So, the other day, I was playing with &lt;a href=&quot;http://twitter.github.com/bootstrap/index.html&quot;&gt;Twitter Bootstrap&lt;/a&gt; on a &lt;span class=&quot;caps&quot;&gt;JSF&lt;/span&gt; application. Everything was fine until I decide to use a &lt;code&gt;render=&quot;@all&quot;&lt;/code&gt; somewhere in the page in order to refresh all my components after quite an heavy operation. Working fine.&lt;/p&gt;
      &lt;p&gt;But Bootstrap was no longuer fully healthy. The &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; and design were ok, but the Javascript was all broken : nearly all effects didn&amp;#8217;t appear anymore. It was a bit strange so I hit F5 and everything was fine, all Javascript events were back. But the moment my &lt;code&gt;render=&quot;@all&quot;&lt;/code&gt; was called, they dissapear again.&lt;/p&gt;
      &lt;h3&gt;Why?&lt;/h3&gt;
      &lt;p&gt;After some investigations, the reason was that Bootstrap calls a Javascript function that will attach most of its events to the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; when the &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;DOM&lt;/span&gt; is ready. Its doing so in order to catch all user interactions when they bubble up to the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag which wrap the whole page. With that, you can use Ajax as much as you want and update your &lt;span class=&quot;caps&quot;&gt;DOM&lt;/span&gt; since there is no event attach to a particular &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt; tag, they are all in the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;
      &lt;p&gt;That&amp;#8217;s really good but that&amp;#8217;s also the reason of the problem. I said Ajax is always fine, and it&amp;#8217;s true as long as you don&amp;#8217;t touch the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag. The moment you update this tag, it will probably be reset to it&amp;#8217;s initial state, without any Javascript event, and since the Bootstrap Javascript function is only called once when the &lt;span class=&quot;caps&quot;&gt;DOM&lt;/span&gt; is ready the first time, Javascript events will not come back. Guess what, &lt;code&gt;render=&quot;@all&quot;&lt;/code&gt; will render your &lt;code&gt;&amp;lt;h:body&amp;gt;&lt;/code&gt; and so will broke all Bootstrap Javascipt events.&lt;/p&gt;
      &lt;h3&gt;A workaround&lt;/h3&gt;
      &lt;p&gt;The true solution would be to call the Bootstrap Javascript function after each &lt;code&gt;render=&quot;@all&quot;&lt;/code&gt; in order to attach all Javascript events again. But since I have no idea to do that right now, I have choosen to use a easier workaround.&lt;/p&gt;
      &lt;p&gt;Just wrapping your whole page in a &lt;span class=&quot;caps&quot;&gt;JSF&lt;/span&gt; panel and render it instead of &lt;code&gt;render=&quot;@all&quot;&lt;/code&gt; should be enough in most use case. It is not exactly the same behaviour, but in most case, when calling &lt;code&gt;render=&quot;@all&quot;&lt;/code&gt;, what you really want is just refreshing your whole page using Ajax. For example:&lt;/p&gt;
      &lt;pre class=&quot;prettyprint linenums&quot;&gt;&lt;code class=&quot;prettyprint linenums&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&amp;#x000A;&amp;lt;html lang=&quot;en-US&quot;&amp;#x000A;      xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&amp;#x000A;      xmlns:h=&quot;http://java.sun.com/jsf/html&quot;&amp;#x000A;      xmlns:f=&quot;http://java.sun.com/jsf/core&quot;&amp;#x000A;      xmlns:ui=&quot;http://java.sun.com/jsf/facelets&quot;&amp;gt;&amp;#x000A;&amp;lt;h:head&amp;gt;&amp;#x000A;    &amp;lt;title&amp;gt;Site title&amp;lt;/title&amp;gt;&amp;#x000A;&amp;lt;/h:head&amp;gt;&amp;#x000A;&amp;lt;h:body&amp;gt;&amp;#x000A;    &amp;lt;h:panelGroup id=&quot;all&quot;&amp;gt;&amp;#x000A;        ... your code...&amp;#x000A;    &amp;lt;/h:panelGroup&amp;gt;&amp;#x000A;&amp;lt;/h:body&amp;gt;&amp;#x000A;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;And replace all your &lt;code&gt;render=&quot;@all&quot;&lt;/code&gt; with &lt;code&gt;render=&quot;all&quot;&lt;/code&gt;.&lt;/p&gt;
    </content>
  </entry>
</feed>
